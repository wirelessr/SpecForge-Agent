{
  "test_run_timestamp": "2025-08-07 13:56:13",
  "total_tasks_tested": 3,
  "average_quality_metrics": {
    "overall_quality": 0.75,
    "command_quality": 0.6000000000000001,
    "complexity_appropriateness": 0.7999999999999999,
    "success_criteria_completeness": 1.0,
    "fallback_strategy_quality": 0.4000000000000001,
    "decision_point_effectiveness": 0.6999999999999998,
    "executability": 1.0
  },
  "performance_metrics": {
    "average_decomposition_time": 23.481306711832683,
    "average_commands_per_task": 2.3333333333333335,
    "average_estimated_duration": 6.333333333333333
  },
  "detailed_results": [
    {
      "task_id": "create_python_module",
      "task_title": "Create Python module with basic functionality",
      "task_description": "Create a Python module file with functions and basic error handling",
      "task_steps": [
        "Create Python file",
        "Add main function",
        "Add error handling",
        "Add documentation"
      ],
      "requirements_ref": [
        "1.1"
      ],
      "dependencies": [],
      "decomposition_time": 17.30847191810608,
      "complexity_analysis": {
        "complexity_level": "simple",
        "estimated_steps": 4,
        "required_tools": [
          "shell",
          "basic_tools"
        ],
        "confidence_score": 0.6
      },
      "execution_plan": {
        "command_count": 2,
        "decision_points_count": 0,
        "success_criteria_count": 7,
        "fallback_strategies_count": 7,
        "estimated_duration": 5
      },
      "commands": [
        {
          "command": "echo 'Starting task implementation'",
          "description": "Initialize task execution",
          "timeout": 5,
          "decision_point": false
        },
        {
          "command": "echo 'Task completed'",
          "description": "Mark task as completed",
          "timeout": 5,
          "decision_point": false
        }
      ],
      "quality_metrics": {
        "command_quality": 0.6000000000000001,
        "complexity_appropriateness": 0.7,
        "success_criteria_completeness": 1.0,
        "fallback_strategy_quality": 0.4,
        "decision_point_effectiveness": 0.7,
        "executability": 1.0,
        "overall_quality": 0.735
      },
      "timestamp": "2025-08-07 13:55:20"
    },
    {
      "task_id": "implement_testing_suite",
      "task_title": "Implement comprehensive testing suite",
      "task_description": "Create unit tests with coverage reporting and CI integration",
      "task_steps": [
        "Create test directory structure",
        "Write unit tests for all functions",
        "Set up coverage reporting",
        "Configure CI pipeline",
        "Add test documentation"
      ],
      "requirements_ref": [
        "1.2",
        "1.3"
      ],
      "dependencies": [
        "create_python_module"
      ],
      "decomposition_time": 25.802547931671143,
      "complexity_analysis": {
        "complexity_level": "complex",
        "estimated_steps": 8,
        "required_tools": [
          "shell",
          "basic_tools"
        ],
        "confidence_score": 0.6
      },
      "execution_plan": {
        "command_count": 3,
        "decision_points_count": 0,
        "success_criteria_count": 12,
        "fallback_strategies_count": 9,
        "estimated_duration": 9
      },
      "commands": [
        {
          "command": "echo 'Starting task implementation'",
          "description": "Initialize task execution",
          "timeout": 5,
          "decision_point": false
        },
        {
          "command": "echo 'Running tests'",
          "description": "Execute tests",
          "timeout": 60,
          "decision_point": false
        },
        {
          "command": "echo 'Task completed'",
          "description": "Mark task as completed",
          "timeout": 5,
          "decision_point": false
        }
      ],
      "quality_metrics": {
        "command_quality": 0.6000000000000001,
        "complexity_appropriateness": 1.0,
        "success_criteria_completeness": 1.0,
        "fallback_strategy_quality": 0.4,
        "decision_point_effectiveness": 0.7,
        "executability": 1.0,
        "overall_quality": 0.78
      },
      "timestamp": "2025-08-07 13:55:46"
    },
    {
      "task_id": "setup_database_integration",
      "task_title": "Set up database integration with ORM",
      "task_description": "Implement database models and connection management",
      "task_steps": [
        "Choose database technology",
        "Set up database connection",
        "Create data models",
        "Implement CRUD operations",
        "Add migration system",
        "Write database tests"
      ],
      "requirements_ref": [
        "2.1",
        "2.2"
      ],
      "dependencies": [],
      "decomposition_time": 27.332900285720825,
      "complexity_analysis": {
        "complexity_level": "simple",
        "estimated_steps": 6,
        "required_tools": [
          "shell",
          "basic_tools"
        ],
        "confidence_score": 0.6
      },
      "execution_plan": {
        "command_count": 2,
        "decision_points_count": 0,
        "success_criteria_count": 11,
        "fallback_strategies_count": 9,
        "estimated_duration": 5
      },
      "commands": [
        {
          "command": "echo 'Starting task implementation'",
          "description": "Initialize task execution",
          "timeout": 5,
          "decision_point": false
        },
        {
          "command": "echo 'Task completed'",
          "description": "Mark task as completed",
          "timeout": 5,
          "decision_point": false
        }
      ],
      "quality_metrics": {
        "command_quality": 0.6000000000000001,
        "complexity_appropriateness": 0.7,
        "success_criteria_completeness": 1.0,
        "fallback_strategy_quality": 0.4,
        "decision_point_effectiveness": 0.7,
        "executability": 1.0,
        "overall_quality": 0.735
      },
      "timestamp": "2025-08-07 13:56:13"
    }
  ]
}